Given two Binary Search Trees. Find the nodes that are common in both of them, ie- find the intersection of the two BSTs.

Note: Return the common nodes in sorted order.



class Solution
{
    public:
    
    void inorder(Node* root, map<int,int> &mp) {
        if (root == NULL) {
            return;
        }
        inorder(root->left, mp);
        mp[root->data]++;
        inorder(root->right,mp);
    }
    vector <int> findCommon(Node *root1, Node *root2)
    {
        map<int, int> mp;
        inorder(root1,mp);
        inorder(root2, mp);
        vector<int> ans;
        for(auto it:mp){
            if(it.second >=2){
                ans.push_back(it.first);
            }
        }
        return ans;
    }
};
